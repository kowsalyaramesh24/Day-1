                                         INFIX TO POSTFIX
                                         -----------------
                                         
PROGRAM:

#include<iostream.h>
#include<stack.h>
#include<locale.h>
using namespace std;
int preced(char ch)
{
if(ch=='+'||ch=='-')
{
return 1;
}
else if(ch=='*'||ch=='/')
{
return 2;
}
else if(ch=='^')
{
return 3;
}
else
{
return 0;
}
}
string intopost(string infix)
{
stack<char> stk;
stk.push('#');
string postfix="";
string::iterator it;
for(it=infix.begin();it!=infix.end();it++)
{
if(isalnum(char(*it)))
postfix +=*it;
else if(*it=='(');
stk.push('(');
else if(*it=='^')
stk.push('^');
else if(*it==')')
{
while(stk.top()!='#'&&stk.top()!='(')
{
postfix +=stk.pop();
}
stk.pop();
}
else
{
if(preced(*it)>preced(stk.top()))
stk.push(*it);
else
{
while(stk.top()!='#'&&preced(*it)<=preced(stk.top()))
{
postfix +=stk.top();
stk.pop();
}
stk.push(*it);
}
}
}
while(stk.top()!='#')
{
postfix +=stk.top;
stk.pop();
}
return postfix;
}
int main()
{
string infix;
cout<<"Enter the string\n";
cin>>infix;
cout<<"Postfix : "<<intopost(infix)<<endl;
return 0;
}

OUTPUT:

Enter the string:
(a+b)*c

Postfix : ab+c*



                                   REVERSE A STRING
                                   -----------------
                                   
                                   
PROGRAM:


import java.io.IOException;
public class StringReverserThroughStack
{
   private String input; 
   private String output;
   public StringReverserThroughStack(String in)
   {
      input = in;
   }
   public String doRev()
   {
      int stackSize = input.length(); 
      Stack theStack = new Stack(stackSize); 
      
      for (int i = 0; i < input.length(); i++)
      {
         char ch = input.charAt(i); 
         theStack.push(ch); 
      }
      output = "";
      while (!theStack.isEmpty())
      {
         char ch = theStack.pop(); 
         output = output + ch; 
      }
      return output;
   }
   public static void main(String[] args) throws IOException 
   {
      System.out.println("Enter the string\n");
      String input = "Java";
      String output;
      StringReverserThroughStack theReverser = 
      new StringReverserThroughStack(input);
      output = theReverser.doRev();
      System.out.println("Reversed string: " + output);
   }
   class Stack
   {
      private int maxSize;
      private char[] stackArray;
      private int top;
      
      public Stack(int max) 
      {
         maxSize = max;
         stackArray = new char[maxSize];
         top = -1;
      }
      public void push(char j)
      {
         stackArray[++top] = j;
      }
      public char pop()
      {
         return stackArray[top--];
      }
      public char peek()
      {
         return stackArray[top];
      }
      public boolean isEmpty()
      {
         return (top == -1);
      }
   }
}


OUTPUT:

Enter the string
java

Reversed string:avaj
