                        MERGE SORT
                      ----------------
                      
PROGRAM:

void merge(int arr[],int l,int m,int r)
{
int i,j,k;
int n1=m-l+1;
int n2=r-m;
int L[n1];
int R[n2];
for(i=0;i<n1;i++)
L[i]=arr[l+i];
for(j=0;j<n2;j++)
R[j]=arr[m+1+j];
i=0;
j=0;
k=1;
while(i<n1&&j<n2)
{
if(L[i]<=R[j])
{
arr[k]=L[i];
i++;
}
else
{
arr[k]=R[j];
j++;
}
k++;
}
while(i<n1)
{
arr[k]=L[i];
i++;
k++;
}
while(j<n2)
{
arr[k]=R[j];
j++;
k++;
}
}
void mergesort(int arr[],int l,int r)
{
if(l<r)
{
int m=l+(r-l)/2;
mergesort(arr,l,m);
mergesort(arr,m+1,r);
merge(arr,l,m,r);
}
}
void printarray(int a[],int size)
{
int i;
for(i=0;i<size;i++)
printf("%d",a[i]);
printf("\n");
}
void main()
{
int arr[]={22,1,3,25,15,7};
int arr_size=sizeof(arr)/sizeof(arr[0]);
clrscr();
printf("MERGE SORT\n");
printf("-------------");
printf("Given array is\n");
printarray(arr,arr_size);
mergesort(arr,0, arr_size-1);
printf("\nSorted array is\n");
printarray(arr,arr_size);
getch();
}


OUTPUT:

MERGE SORT
-----------

Given array is
22
1
3
25
15
7

Sorted array is
1
3
7
15
22
25



                           MULTI-DIMENSIONAL ARRAY
                           -----------------------
                           
PROGRAM:

#include<stdio.h>
#include<conio.h>
void main()
{
int arr[2][4]={{5,2,7,9},{3,4,8,1}};
int i,j;
clrscr();
for(i=0;i<2;i++)
{
for(j=0;j<4;j++)
{
printf("%d  ",arr[i][j]);
}
printf("\n");
}
getch();
}


OUTPUT:

5  2  7  9
3  4  8  1
