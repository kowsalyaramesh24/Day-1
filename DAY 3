                               BUBBLE SORT
                             ----------------
                             
PROGRAM

void swap(int *x,int *y)
{
int temp=*x;
*x=*y;
*y=temp;
}
void bubblesort(int arr[],int n)
{
int i,j;
for(i=0;i<n-1;i++)
for(j=0;j<n-i-1;j++)
if(arr[j]>arr[j+1])
swap(&arr[j],&arr[j+1]);
}
void printarray(int arr[],int n)
{
int i;
for(i=0;i<n;i++)
{
printf("%d",arr[i]);
printf("\n");
}
}
void main()
{
int arr[]={6,3,9,12,2,5,8};
int i;
int n=sizeof(arr)/sizeof(arr[0]);
clrscr();
printf("                 BUBBLE SORT\n               ");
printf("---------------\n");
printf("The elements are:\n");
for(i=0;i<n;i++)
{
printf("%d\n",arr[i]);
}
bubblesort(arr,n);
printf("Sorted Array:\n");
printarray(arr,n);
getch();
}

OUTPUT

BUBBLE SORT
-----------
The elements are:
6
3
9
12
2
5
8

SORTED ARRAY:
2
3
5
6
8
9
12





                                         INSERTION SORT
                                       -------------------
                                       
PROGRAM CODE:

 void insertionsort(int arr[],int n)
{
int i;
for(i=0;i<n;i++)
{
int temp;
int j;
temp=arr[i];
j=i;
while(j>0&&temp<arr[j-1])
{
arr[j]=arr[j-1];
j=j-1;
}
arr[j]=temp;
}
}
void printarray(int arr[],int n)
{
int i;
for(i=0;i<n;i++)
{
printf("%d",arr[i]);
printf("\n");
}
}
void main()
{
int arr[]={6,3,9,12,2,5,8};
int i;
int n=sizeof(arr)/sizeof(arr[0]);
clrscr();
printf(" INSERTION SORT\n ");
printf("---------------\n");
printf("The elements are:\n");
for(i=0;i<n;i++)
{
printf("%d\n",arr[i]);
}
insertionsort(arr,n);
printf("Sorted Array:\n");
printarray(arr,n);
getch();
}
                                 
                             
INSERTION SORT
---------------
The elements are:
6
3
9
12
2
5
8

SORTED ARRAY:
2
3
5
6
8
9
12
                            
                                       
                                       
                                       QUICK SORT
                                      --------------
                                      
                                      
PROGRAM:

void swap(int *a,int *b)
{
int temp=*a;
*a=*b;
*b=temp;
}
void quicksort(int arr[],int low,int high)
{
if(low<high)
{
int pi;
pi=partition(arr,low,high);
quicksort(arr,low,pi-1);
quicksort(arr,pi+1,high);
}
}
int partition(int arr[],int low,int high)
{
int pivot=arr[high];
int i=(low-1);
int j;
for(j=low;j<=high-1;j++)
{
if(arr[j]<=pivot)
{
i++;
swap(&arr[i],&arr[j]);
}
}
swap(&arr[i+1],&arr[high]);
return(i+1);
}
void printarray(int arr[],int n)
{
int i;
for(i=0;i<n;i++)
{
printf("%d",arr[i]);
printf("\n");
}
}
void main()
{
int arr[]={6,3,9,12,2,5,8};
int i;
int n=sizeof(arr)/sizeof(arr[0]);
clrscr();
printf(" QUICK SORT\n ");
printf("---------------\n");
printf("The elements are:\n");
for(i=0;i<n;i++)
{
printf("%d\n",arr[i]);
}
quicksort(arr,0,n-1);
printf("Sorted Array:\n");
printarray(arr,n);
getch();
}


QUICK SORT
-----------
The elements are:
6
3
9
12
2
5
8

SORTED ARRAY:
2
3
5
6
8
9
12
